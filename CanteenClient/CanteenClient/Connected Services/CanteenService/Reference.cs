//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ecart.CanteenService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/CanteenFoodService")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/CanteenFoodService")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int orderidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonName {
            get {
                return this.PersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNameField, value) != true)) {
                    this.PersonNameField = value;
                    this.RaisePropertyChanged("PersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int orderid {
            get {
                return this.orderidField;
            }
            set {
                if ((this.orderidField.Equals(value) != true)) {
                    this.orderidField = value;
                    this.RaisePropertyChanged("orderid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CanteenService.IitemService")]
    public interface IitemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IitemService/GetItem", ReplyAction="http://tempuri.org/IitemService/GetItemResponse")]
        System.Data.DataSet GetItem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IitemService/GetItem", ReplyAction="http://tempuri.org/IitemService/GetItemResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetItemAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IitemService/AddItem", ReplyAction="http://tempuri.org/IitemService/AddItemResponse")]
        void AddItem(Ecart.CanteenService.Item itemobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IitemService/AddItem", ReplyAction="http://tempuri.org/IitemService/AddItemResponse")]
        System.Threading.Tasks.Task AddItemAsync(Ecart.CanteenService.Item itemobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IitemService/UpdateItem", ReplyAction="http://tempuri.org/IitemService/UpdateItemResponse")]
        void UpdateItem(Ecart.CanteenService.Item itemobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IitemService/UpdateItem", ReplyAction="http://tempuri.org/IitemService/UpdateItemResponse")]
        System.Threading.Tasks.Task UpdateItemAsync(Ecart.CanteenService.Item itemobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IitemService/RemoveItem", ReplyAction="http://tempuri.org/IitemService/RemoveItemResponse")]
        void RemoveItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IitemService/RemoveItem", ReplyAction="http://tempuri.org/IitemService/RemoveItemResponse")]
        System.Threading.Tasks.Task RemoveItemAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IitemServiceChannel : Ecart.CanteenService.IitemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IitemServiceClient : System.ServiceModel.ClientBase<Ecart.CanteenService.IitemService>, Ecart.CanteenService.IitemService {
        
        public IitemServiceClient() {
        }
        
        public IitemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IitemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IitemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IitemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetItem() {
            return base.Channel.GetItem();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetItemAsync() {
            return base.Channel.GetItemAsync();
        }
        
        public void AddItem(Ecart.CanteenService.Item itemobj) {
            base.Channel.AddItem(itemobj);
        }
        
        public System.Threading.Tasks.Task AddItemAsync(Ecart.CanteenService.Item itemobj) {
            return base.Channel.AddItemAsync(itemobj);
        }
        
        public void UpdateItem(Ecart.CanteenService.Item itemobj) {
            base.Channel.UpdateItem(itemobj);
        }
        
        public System.Threading.Tasks.Task UpdateItemAsync(Ecart.CanteenService.Item itemobj) {
            return base.Channel.UpdateItemAsync(itemobj);
        }
        
        public void RemoveItem(int id) {
            base.Channel.RemoveItem(id);
        }
        
        public System.Threading.Tasks.Task RemoveItemAsync(int id) {
            return base.Channel.RemoveItemAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CanteenService.IorderService")]
    public interface IorderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IorderService/GetAllOrderHistory", ReplyAction="http://tempuri.org/IorderService/GetAllOrderHistoryResponse")]
        System.Data.DataSet GetAllOrderHistory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IorderService/GetAllOrderHistory", ReplyAction="http://tempuri.org/IorderService/GetAllOrderHistoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllOrderHistoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IorderService/PlaceOrder", ReplyAction="http://tempuri.org/IorderService/PlaceOrderResponse")]
        void PlaceOrder(Ecart.CanteenService.Order orderobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IorderService/PlaceOrder", ReplyAction="http://tempuri.org/IorderService/PlaceOrderResponse")]
        System.Threading.Tasks.Task PlaceOrderAsync(Ecart.CanteenService.Order orderobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IorderService/GetOrderDetail", ReplyAction="http://tempuri.org/IorderService/GetOrderDetailResponse")]
        Ecart.CanteenService.Order GetOrderDetail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IorderService/GetOrderDetail", ReplyAction="http://tempuri.org/IorderService/GetOrderDetailResponse")]
        System.Threading.Tasks.Task<Ecart.CanteenService.Order> GetOrderDetailAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IorderServiceChannel : Ecart.CanteenService.IorderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IorderServiceClient : System.ServiceModel.ClientBase<Ecart.CanteenService.IorderService>, Ecart.CanteenService.IorderService {
        
        public IorderServiceClient() {
        }
        
        public IorderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IorderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IorderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IorderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetAllOrderHistory() {
            return base.Channel.GetAllOrderHistory();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllOrderHistoryAsync() {
            return base.Channel.GetAllOrderHistoryAsync();
        }
        
        public void PlaceOrder(Ecart.CanteenService.Order orderobj) {
            base.Channel.PlaceOrder(orderobj);
        }
        
        public System.Threading.Tasks.Task PlaceOrderAsync(Ecart.CanteenService.Order orderobj) {
            return base.Channel.PlaceOrderAsync(orderobj);
        }
        
        public Ecart.CanteenService.Order GetOrderDetail(int id) {
            return base.Channel.GetOrderDetail(id);
        }
        
        public System.Threading.Tasks.Task<Ecart.CanteenService.Order> GetOrderDetailAsync(int id) {
            return base.Channel.GetOrderDetailAsync(id);
        }
    }
}
